table = read.csv("../data-source/data_file.csv")
table = table[,-1]
table$age = 2020-table$birthyear
table = data.frame(people, birthyear, taste, genre, age)
View(table)
str(table)
names(table)
head(table)
table[1,2]
nrow(table)
ncol(table)
dim(table) # linha coluna
head(table, n = 2)
tail(table, n = 2)
table$people
table[, 3]
table[, c(1, 3)]
table[, -2]
write.csv(table[,-5], "../data-source/data_file.csv")
table = read.csv("../data-source/data_file.csv")
table = table[,-1]
table$age = 2020-table$birthyear
table = data.frame(people, birthyear, taste, genre, age)
View(table)
str(table)
names(table)
head(table)
table[1,2]
nrow(table)
ncol(table)
dim(table) # linha coluna
head(table, n = 2)
tail(table, n = 2)
table$people
table[, 3]
table[, c(1, 3)]
table[, -2]
write.csv(table[,-5], "../data-source/data_file.csv")
table$age > 25
table[table$age > 25]
ageindex = which( colnames(table)=="age" )
ageindex = match("age",names(table))
ageindex = match("age",names(table))
match("age",names(table))
ageindex = - match("age",names(table))
table = read.csv("../data-source/data_file.csv")
table = table[,-1]
table$age = 2020-table$birthyear
table = data.frame(people, birthyear, taste, genre, age)
View(table)
str(table)
names(table)
head(table)
table[1,2]
nrow(table)
ncol(table)
dim(table) # linha coluna
head(table, n = 2)
tail(table, n = 2)
table$people
table[, 3]
table[, c(1, 3)]
table[, -2]
table[table$age > 25]
ageindex = - match("age",names(table))
write.csv(table[,ageindex], "../data-source/data_file.csv")
rm(table)
table[table$age > 25,]
table = read.csv("../data-source/data_file.csv")
View(table)
table = table[,-1]
table[table$age > 25,]
table$age = 2020-table$birthyear
table[table$age > 25,]
table = read.csv("../data-source/data_file.csv")
table = table[,-1]
table$age = 2020-table$birthyear
table = data.frame(people, birthyear, taste, genre, age)
View(table)
str(table)
names(table)
head(table)
table[1,2]
nrow(table)
ncol(table)
dim(table) # linha coluna
head(table, n = 2)
tail(table, n = 2)
table$people
table[, 3]
table[, c(1, 3)]
table[, -2]
table[table$age > 25,]
ageindex = - match("age",names(table))
write.csv(table[,ageindex], "../data-source/data_file.csv")
table = read.csv("../data-source/data_file.csv")
table = table[,-1]
table$age = 2020-table$birthyear
table = data.frame(people, birthyear, taste, genre, age)
View(table)
str(table)
names(table)
head(table)
table[1,2]
nrow(table)
ncol(table)
dim(table) # linha coluna
head(table, n = 2)
tail(table, n = 2)
table$people
table[, 3]
table[, c(1, 3)]
table[, -2]
table[table$age > 25,]
ageindex = - match("age",names(table))
write.csv(table[,ageindex], "../data-source/data_file.csv")
table$imc = table$weight/table$height^2
table$imc = table$weight/(table$height/10.0)^2
table$height/10.0
table$imc = table$weight/(table$height/100.0)^2
table = read.csv("../data-source/data_file.csv")
table = table[,-1]
table$age = 2020-table$birthyear
table$imc = table$weight/(table$height/100.0)^2
table = data.frame(people, birthyear, taste, genre, age)
View(table)
str(table)
names(table)
head(table)
table[1,2]
nrow(table)
ncol(table)
dim(table) # linha coluna
head(table, n = 2)
tail(table, n = 2)
table$people
table[, 3]
table[, c(1, 3)]
table[, -2]
table[table$age > 25,]
ageindex = - match("age",names(table))
imcindex = - match("imc",names(table))
formattable = table[,ageindex]
formattable = table[,imcindex]
write.csv(formattable, "../data-source/data_file.csv")
goodimc = table$imc <= 24.9 && table$imc >= 18.5
goodimc = table[table$imc <= 24.9 && table$imc >= 18.5, ]
View(goodimc)
goodimc = table[table$imc >= 18.5 && table$imc <= 24.5, ]
table[table$imc >= 18.5 && table$imc <= 24.5, ]
goodimc = table[table$imc >= 18.5, ]
table[table$imc >= 18.5, ]
goodimc = table[table$imc <= 24.5, ]
table[table$imc <= 24.5, ]
table[inrange(table$imc, 18.5, 24.5), ]
between(table$imc, 18.5, 24.5)
goodimc = table[data.table::between(table$imc, 18.5, 24.5), ]
goodimc = table[table$imc >= 18.5 & table$imc <= 24.5, ]
underweight_imc = table[table$imc < 18.5, ]
good_imc = table[table$imc >= 18.5 & table$imc <= 24.5, ]
overweight_imc = table[table$imc > 24.5 & table$imc <= 29.9, ]
obese_imc = table[table$imc >= 30,]
View(good_imc)
View(obese_imc)
View(overweight_imc)
View(table)
View(underweight_imc)
# This script will retrieve and csv file then generate two computed data row, and then save the csv again
# without computed data
# It will create subsets based on IMC
table = read.csv("../data-source/data_file.csv")
table = table[,-1]
table$age = 2020-table$birthyear
table$imc = table$weight/(table$height)^2
age_index = - match("age",names(table))
imc_index = - match("imc",names(table))
underweight_imc = table[table$imc < 18.5, ]
good_imc = table[table$imc >= 18.5 & table$imc <= 24.5, ]
overweight_imc = table[table$imc > 24.5 & table$imc <= 29.9, ]
obese_imc = table[table$imc >= 30,]
format_table = table[,age_index]
format_table = format_table[,imc_index]
write.csv(format_table, "../data-source/data_file.csv")
table = read.csv("../data-source/data_file.csv")
# This script will retrieve and csv file then generate two computed data row, and then save the csv again
# without computed data
# It will create subsets based on IMC
table = read.csv("../data-source/data_file.csv")
table = table[,-1]
table$age = 2020-table$birthyear
table$imc = table$weight/(table$height)^2
age_index = - match("age",names(table))
imc_index = - match("imc",names(table))
underweight_imc = table[table$imc < 18.5, ]
good_imc = table[table$imc >= 18.5 & table$imc <= 24.5, ]
overweight_imc = table[table$imc > 24.5 & table$imc <= 29.9, ]
obese_imc = table[table$imc >= 30,]
format_table = table[,imc_index]
format_table = format_table[,age_index]
write.csv(format_table, "../data-source/data_file.csv")
table = read.csv("../data-source/data_file.csv")
View(table)
table$age = 2020-table$birthyear
table$imc = table$weight/(table$height)^2
age_index = - match("age",names(table))
imc_index = - match("imc",names(table))
format_table = table[,imc_index]
View(format_table)
# This script will retrieve and csv file then generate two computed data row, and then save the csv again
# without computed data
# It will create subsets based on IMC
table = read.csv("../data-source/data_file.csv")
table = table[,-1]
table$age = 2020-table$birthyear
table$imc = table$weight/(table$height)^2
underweight_imc = table[table$imc < 18.5, ]
good_imc = table[table$imc >= 18.5 & table$imc <= 24.5, ]
overweight_imc = table[table$imc > 24.5 & table$imc <= 29.9, ]
obese_imc = table[table$imc >= 30,]
format_table = table
age_index = - match("age",names(format_table))
format_table = format_table[,age_index]
imc_index = - match("imc",names(format_table))
format_table = format_table[,format_table]
write.csv(format_table, "../data-source/data_file.csv")
format_table = table
age_index = - match("age",names(format_table))
format_table = format_table[,age_index]
imc_index = - match("imc",names(format_table))
format_table = format_table[,format_table]
format_table = format_table[,imc_index]
write.csv(format_table, "../data-source/data_file.csv")
# This script will retrieve and csv file then generate two computed data row, and then save the csv again
# without computed data
# It will create subsets based on IMC
table = read.csv("../data-source/data_file.csv")
table = table[,-1]
table$age = 2020-table$birthyear
table$imc = table$weight/(table$height)^2
underweight_imc = table[table$imc < 18.5, ]
good_imc = table[table$imc >= 18.5 & table$imc <= 24.5, ]
overweight_imc = table[table$imc > 24.5 & table$imc <= 29.9, ]
obese_imc = table[table$imc >= 30,]
format_table = table
age_index = - match("age",names(format_table))
format_table = format_table[,age_index]
imc_index = - match("imc",names(format_table))
format_table = format_table[,imc_index]
write.csv(format_table, "../data-source/data_file.csv")
table = read.csv("../data-source/data_file.csv")
weigt_med = mean(table$weight)
sort_height = sort(table$height, descreasing = F)
sort_height = sort(table$height, decreasing = F)
height_mean = (sort_height[(n/2)] + sort_height[n/2 + 1]) /2
n = length(table$height)
sort_height = sort(table$height, decreasing = F)
height_mean = (sort_height[(n/2)] + sort_height[n/2 + 1]) /2
# This script will retrieve and csv file then calculate the arithmetic mean of the weights, and the median of heights
table = read.csv("../data-source/data_file.csv")
weigt_mean = mean(table$weight)
n = length(table$height)
sort_height = sort(table$height, decreasing = F)
height_mean = (sort_height[(n/2)] + sort_height[n/2 + 1]) /2
height_mean == median(table$height)
median(table$height)
quantile(table$birthyear)
quantile(table$birthyear, 0.10)
quantile(table$birthyear, 0.30)
quantile(table$birthyear, 0.35)
quantile(table$birthyear, 0.50)
summary(table$birthyear)
summary(table)
var(table$height)
sd(table$height) # == sqrt(var(table$height))
